{
  "name": "prod",
  "version": "0.0.3",
  "description": "Asynchronous npm dependency walker",
  "main": "index.js",
  "scripts": {
    "test": "(cd test/fixture; npm install) && node test/index.js"
  },
  "author": {
    "name": "Tim Oxley"
  },
  "license": "MIT",
  "dependencies": {
    "read-installed": "~0.2.4",
    "async": "~0.2.9",
    "async-mixin": "0.0.1",
    "advisable": "~0.2.0"
  },
  "devDependencies": {
    "tape": "~2.0.0"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/timoxley/prod.git"
  },
  "bugs": {
    "url": "https://github.com/timoxley/prod/issues"
  },
  "keywords": [
    "npm",
    "dependency",
    "tree",
    "async",
    "walk",
    "modules"
  ],
  "readme": "# prod\n\n### Asynchronous node module dependency tree walker.\n\n[![Build Status](https://travis-ci.org/timoxley/prod.png?branch=master)](https://travis-ci.org/timoxley/prod)\n\nEasily perform asynchronous operations on each item in a module's dependency tree.\n\n## Example\n\nPut individual names and versions of all dependencies in some db:\n\n```js\n\nvar prod = require('prod')\nvar moduleRoot = path.dirname(require.resolve('tape'))\n\nprod(moduleRoot).map(function(dep, next) {\n  db.put(dep.name + '@' + dep.version, next)\n}, function(err, deps) {\n  if (err) throw err\n  console.log(deps)\n  // => [\n  // 'tape@2.0.0',\n  // 'jsonify@0.0.0',\n  // 'deep-equal@0.1.0',\n  // 'defined@0.0.0',\n  // 'through@2.3.4'\n  // ]\n  })\n})\n\n```\n\n## API\n\n```js\n\n// pass any module's root directory to walk over it and it's dependencies\nvar tapeDependencies = prod(path.dirname(require.resolve('tape')))\n\nvar myDependencies = prod() // defaults to process.cwd()\n\nObject.keys(myDependencies) // => // each, eachSeries, eachLimit, map, ...etc.\n// See below.\n\n```\n\n`prod` uses [timoxley/async-mixin](https://github.com/timoxley/async-mixin), so you automatically have access to the following\nmethods from [caolin/async](https://github.com/caolan/async) while iterating over your dependency tree:\n\n* each\n* eachSeries\n* eachLimit\n* map\n* mapSeries\n* mapLimit\n* filter\n* filterSeries\n* reject\n* rejectSeries\n* reduce\n* reduceRight\n* detect\n* detectSeries\n* sortBy\n* some\n* every\n* concat\n* concatSeries\n\nIf you don't want any of this async magic, you can simply initialize\nprod with .load and use regular Array operations on its `.dependencies`\n\n```js\nvar myDependencies = prod().load(function(err, dependencies) {\n  if (err) throw err\n\n  console.log(dependencies === myDependencies.dependencies) // => true\n\n  // regular ES5 Array methods\n  dependencies.map(function() {\n    return dep.name\n  })\n})\n\n```\n\nAlternatively, you could try using [read-installed](https://github.com/isaacs/read-installed)\nwith [traverse](https://github.com/substack/js-traverse)\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "homepage": "https://github.com/timoxley/prod",
  "_id": "prod@0.0.3",
  "dist": {
    "shasum": "238cc80fe985d4bfc602dd79adfd0f67a19336bb"
  },
  "_from": "prod@",
  "_resolved": "https://registry.npmjs.org/prod/-/prod-0.0.3.tgz"
}
